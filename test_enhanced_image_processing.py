#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
"""

import os
import asyncio
from dotenv import load_dotenv
from groq import Groq

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_groq_vision_models():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å vision –º–æ–¥–µ–ª–µ–π Groq"""
    
    api_key = os.getenv("GROQ_API_KEY")
    if not api_key:
        print("‚ùå GROQ_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print("üîë GROQ_API_KEY –Ω–∞–π–¥–µ–Ω")
    print("üì° –ü—Ä–æ–≤–µ—Ä—è—é vision –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Groq
        client = Groq(api_key=api_key)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å vision –º–æ–¥–µ–ª–∏
        models_response = client.models.list()
        vision_models = [
            "meta-llama/llama-4-scout-17b-16e-instruct",
            "meta-llama/llama-4-maverick-17b-128e-instruct"
        ]
        
        available_models = [model.id for model in models_response.data]
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π ({len(available_models)} –º–æ–¥–µ–ª–µ–π)")
        
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é vision –º–æ–¥–µ–ª–∏:")
        for model in vision_models:
            if model in available_models:
                print(f"  ‚úÖ {model} - –î–û–°–¢–£–ü–ù–ê")
            else:
                print(f"  ‚ùå {model} - –ù–ï –î–û–°–¢–£–ü–ù–ê")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ vision –º–æ–¥–µ–ª—å
        available_vision_models = [model for model in vision_models if model in available_models]
        
        if not available_vision_models:
            print("\n‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö vision –º–æ–¥–µ–ª–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            return False
        
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞—è vision –º–æ–¥–µ–ª—å: {available_vision_models[0]}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ vision –º–æ–¥–µ–ª–µ–π: {e}")
        return False

async def test_groq_prompts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏"""
    
    api_key = os.getenv("GROQ_API_KEY")
    if not api_key:
        print("‚ùå GROQ_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏...")
    
    try:
        client = Groq(api_key=api_key)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
        print("\nüìù –¢–µ—Å—Ç –∫—Ä–∞—Ç–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏...")
        brief_response = client.chat.completions.create(
            model="meta-llama/llama-4-scout-17b-16e-instruct",
            messages=[
                {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."},
                {"role": "user", "content": "–û–ø–∏—à–∏ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ, –≤—ã–¥–µ–ª–∏–≤ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ."}
            ],
            max_tokens=100
        )
        
        if brief_response and brief_response.choices:
            print(f"‚úÖ –ö—Ä–∞—Ç–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–±–æ—Ç–∞–µ—Ç: {brief_response.choices[0].message.content[:100]}...")
        else:
            print("‚ùå –ö—Ä–∞—Ç–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        print("\nüìù –¢–µ—Å—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏...")
        standard_response = client.chat.completions.create(
            model="meta-llama/llama-4-scout-17b-16e-instruct",
            messages=[
                {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö –ª—é–¥–µ–π. –°–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ."},
                {"role": "user", "content": "–û–ø–∏—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –Ω–µ–∑—Ä—è—á–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."}
            ],
            max_tokens=200
        )
        
        if standard_response and standard_response.choices:
            print(f"‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–±–æ—Ç–∞–µ—Ç: {standard_response.choices[0].message.content[:100]}...")
        else:
            print("‚ùå –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
        print("\nüìù –¢–µ—Å—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏...")
        technical_response = client.chat.completions.create(
            model="meta-llama/llama-4-scout-17b-16e-instruct",
            messages=[
                {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö –ª—é–¥–µ–π."},
                {"role": "user", "content": "–°–¥–µ–ª–∞–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."}
            ],
            max_tokens=300
        )
        
        if technical_response and technical_response.choices:
            print(f"‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–±–æ—Ç–∞–µ—Ç: {technical_response.choices[0].message.content[:100]}...")
        else:
            print("‚ùå –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        
        print("\n‚úÖ –í—Å–µ —É—Ä–æ–≤–Ω–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–º–ø—Ç–æ–≤: {e}")
        return False

async def test_accessibility_features():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö"""
    
    print("\n‚ôø –¢–µ—Å—Ç–∏—Ä—É—é —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–º–ø—Ç–æ–≤
    print("üìã –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–º–ø—Ç–æ–≤...")
    
    brief_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

**–í–∫–ª—é—á–∏ —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ:**
- –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
- –ö–ª—é—á–µ–≤—ã–µ —Ü–≤–µ—Ç–∞
- –û–±—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ

–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–º."""
    
    standard_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö –ª—é–¥–µ–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

–û–ø–∏—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å –Ω–µ–∑—Ä—è—á–µ–º—É —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ.

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏:**

1. **–û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ –∏—Ö —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:**
   - –ß—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ, —Å–ª–µ–≤–∞, —Å–ø—Ä–∞–≤–∞, –≤–≤–µ—Ä—Ö—É, –≤–Ω–∏–∑—É
   - –†–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏ (–±–ª–∏–∑–∫–æ, –¥–∞–ª–µ–∫–æ, —Ä—è–¥–æ–º)
   - –†–∞–∑–º–µ—Ä—ã –æ–±—ä–µ–∫—Ç–æ–≤ (–±–æ–ª—å—à–æ–π, –º–∞–ª–µ–Ω—å–∫–∏–π, —Å—Ä–µ–¥–Ω–∏–π)

2. **–¶–≤–µ—Ç–∞ –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
   - –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –æ–±—ä–µ–∫—Ç–æ–≤
   - –Ø—Ä–∫–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å
   - –¢–µ–∫—Å—Ç—É—Ä—ã (–≥–ª–∞–¥–∫–∞—è, —à–µ—Ä–æ—Ö–æ–≤–∞—Ç–∞—è, –±–ª–µ—Å—Ç—è—â–∞—è)

3. **–¢–µ–∫—Å—Ç –∏ —Å–∏–º–≤–æ–ª—ã:**
   - –í–µ—Å—å –≤–∏–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç (–Ω–∞–¥–ø–∏—Å–∏, –≤—ã–≤–µ—Å–∫–∏, –¥–æ–∫—É–º–µ–Ω—Ç—ã)
   - –°–∏–º–≤–æ–ª—ã, –ª–æ–≥–æ—Ç–∏–ø—ã, —ç–º–æ–¥–∑–∏
   - –Ø–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å)

4. **–û–±—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç:**
   - –ú–µ—Å—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è (–∫–æ–º–Ω–∞—Ç–∞, —É–ª–∏—Ü–∞, –ø—Ä–∏—Ä–æ–¥–∞, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç)
   - –í—Ä–µ–º—è —Å—É—Ç–æ–∫ –∏–ª–∏ —Å–µ–∑–æ–Ω (–µ—Å–ª–∏ –ø–æ–Ω—è—Ç–Ω–æ)
   - –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è

5. **–≠–º–æ—Ü–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:**
   - –í—ã—Ä–∞–∂–µ–Ω–∏—è –ª–∏—Ü –ª—é–¥–µ–π
   - –û–±—â–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   - –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (—Ä–∞–¥–æ—Å—Ç–Ω–æ–µ, –≥—Ä—É—Å—Ç–Ω–æ–µ, —Å–ø–æ–∫–æ–π–Ω–æ–µ, –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ–µ)

6. **–î–µ—Ç–∞–ª–∏ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è:**
   - –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç (–¥–µ–π—Å—Ç–≤–∏–µ, —Å–æ–±—ã—Ç–∏–µ)
   - –ö—Ç–æ —É—á–∞—Å—Ç–≤—É–µ—Ç (–ª—é–¥–∏, –∂–∏–≤–æ—Ç–Ω—ã–µ, –ø—Ä–µ–¥–º–µ—Ç—ã)
   - –ó–∞—á–µ–º —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞–∂–Ω–æ

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏—è:**
- –ù–∞—á–Ω–∏ —Å –æ–±—â–µ–≥–æ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
- –û–ø–∏—à–∏ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
- –î–æ–±–∞–≤—å –¥–µ—Ç–∞–ª–∏ –ø–æ –∫—Ä–∞—è–º
- –ó–∞–≤–µ—Ä—à–∏ –æ–±—â–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º

–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º, –Ω–æ –æ—á–µ–Ω—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º. –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏!"""
    
    technical_prompt = """–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö –ª—é–¥–µ–π. –°–æ–∑–¥–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.

**–í–∫–ª—é—á–∏ –í–°–ï –¥–µ—Ç–∞–ª–∏:**
1. **–¢–æ—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏** - —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤, —Ç–æ—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
2. **–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã** - —Ç–æ—á–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
3. **–¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã** - –µ—Å–ª–∏ –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å (RGB, HEX)
4. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏** - —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, –∫–∞—á–µ—Å—Ç–≤–æ, —Ñ–æ—Ä–º–∞—Ç
5. **–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç—É—Ä** - –º–∞—Ç–æ–≤–æ—Å—Ç—å, –≥–ª—è–Ω—Ü–µ–≤–æ—Å—Ç—å, —Ä–µ–ª—å–µ—Ñ–Ω–æ—Å—Ç—å
6. **–ê–Ω–∞–ª–∏–∑ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏** - –ø—Ä–∞–≤–∏–ª–æ —Ç—Ä–µ—Ç–µ–π, —Ñ–æ–∫—É—Å–Ω—ã–µ —Ç–æ—á–∫–∏
7. **–°–≤–µ—Ç –∏ —Ç–µ–Ω–∏** - –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–∞, –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ç–µ–Ω–µ–π
8. **–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ** - –≤—Ä–µ–º—è —Å—ä–µ–º–∫–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã (–µ—Å–ª–∏ –≤–∏–¥–Ω—ã)

**–°—Ç—Ä—É–∫—Ç—É—Ä–∞:**
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
- –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
- –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
- –í–∏–∑—É–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
- –ó–∞–∫–ª—é—á–µ–Ω–∏–µ

–ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–µ—Ö–Ω–∏—á–Ω—ã–º –∏ —Ç–æ—á–Ω—ã–º!"""
    
    print("‚úÖ –ö—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç:")
    print(f"   - –î–ª–∏–Ω–∞: {len(brief_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   - –í–∫–ª—é—á–∞–µ—Ç: –∫—Ä–∞—Ç–∫–æ—Å—Ç—å, –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, —Ü–≤–µ—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
    
    print("\n‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç:")
    print(f"   - –î–ª–∏–Ω–∞: {len(standard_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   - –í–∫–ª—é—á–∞–µ—Ç: —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ, —Ä–∞–∑–º–µ—Ä—ã, —Ü–≤–µ—Ç–∞, —Ç–µ–∫—Å—Ç, —ç–º–æ—Ü–∏–∏, –∫–æ–Ω—Ç–µ–∫—Å—Ç")
    
    print("\n‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç:")
    print(f"   - –î–ª–∏–Ω–∞: {len(technical_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   - –í–∫–ª—é—á–∞–µ—Ç: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ, –∫–æ–º–ø–æ–∑–∏—Ü–∏—é")
    
    print("\n‚ôø –í—Å–µ –ø—Ä–æ–º–ø—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!")
    return True

async def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("=" * 80)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ vision –º–æ–¥–µ–ª–µ–π
    vision_ok = await test_groq_vision_models()
    
    if vision_ok:
        # –¢–µ—Å—Ç 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–æ–≤
        prompts_ok = await test_groq_prompts()
        
        if prompts_ok:
            # –¢–µ—Å—Ç 3: –§—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
            accessibility_ok = await test_accessibility_features()
            
            if accessibility_ok:
                print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
                print("‚úÖ Vision –º–æ–¥–µ–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
                print("‚úÖ –ü—Ä–æ–º–ø—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                print("‚ôø –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –Ω–µ–∑—Ä—è—á–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!")
            else:
                print("\n‚ö†Ô∏è –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ—à–µ–ª")
        else:
            print("\n‚ö†Ô∏è –¢–µ—Å—Ç –ø—Ä–æ–º–ø—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–µ–ª")
    else:
        print("\n‚ùå –¢–µ—Å—Ç vision –º–æ–¥–µ–ª–µ–π –Ω–µ –ø—Ä–æ—à–µ–ª")
    
    print("\n" + "=" * 80)
    print("üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:**")
    print("‚Ä¢ **–ö—Ä–∞—Ç–∫–∏–π** - –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–∑–æ—Ä–∞")
    print("‚Ä¢ **–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π** - –¥–ª—è –Ω–µ–∑—Ä—è—á–∏—Ö (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("‚Ä¢ **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π** - –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è")
    print("\n‚ôø **–§—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:**")
    print("‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤")
    print("‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π")
    print("‚Ä¢ –¶–≤–µ—Ç–∞ –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã")
    print("‚Ä¢ –¢–µ–∫—Å—Ç –∏ —Å–∏–º–≤–æ–ª—ã")
    print("‚Ä¢ –≠–º–æ—Ü–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
    print("‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏ –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∞")
    print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    asyncio.run(main())
